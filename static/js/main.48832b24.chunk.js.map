{"version":3,"sources":["components/Header.js","components/CountryCard.js","assets/spinner.gif","assets/left-arrow.svg","components/CountryDetails.js","assets/search.svg","components/SearchBar.js","components/App.js","index.js"],"names":["Header","className","to","CountryCard","props","countryData","country","alpha3Code","src","flag","alt","name","width","population","toString","replace","subregion","capital","CountryDetails","params","useParams","useState","detailedData","setDetailedData","a","fetch","json","data","status","console","log","useEffect","fetchData","leftArrow","nativeName","area","currencies","map","curr","join","languages","lang","borders","length","border","spinner","regions","SearchBar","onChangeRegion","onFilterCountries","filterValue","search","onInput","e","target","value","type","placeholder","onChange","localStorage","getItem","region","App","allCountries","setAllCountries","showTheseCountries","setShowTheseCountries","setFilterValue","regionCountries","setRegionCountries","filterCountries","val","Val","toLowerCase","trim","useThisData","Object","values","searchedCountry","filter","filterCountry","includes","changeRegion","currentRegion","filterRegionCountries","item","setItem","then","response","recivedData","path","element","entries","alpha2Code","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48832b24.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nfunction Header(){\r\n    return ( \r\n        <h1 className=\"title\"><Link to=\"/\">Where in the world?</Link></h1>\r\n    )\r\n}\r\n\r\nexport default Header","import { Link } from \"react-router-dom\";\r\n\r\nfunction CountryCard(props){\r\n    let { countryData } = props\r\n    let country = countryData\r\n\r\n    function population(country){ \r\n        return country.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n    }\r\n\r\n    return(\r\n        <div className=\"card\" key={countryData[0]}>\r\n          <Link to={`/country/${country.alpha3Code}`}>\r\n          <div className=\"card-img\"><img src={country.flag} alt={country.name} width=\"300px\"/></div>\r\n          <div className=\"card-text\">\r\n            <h1 className=\"country-name\">{ country.name }</h1>\r\n            <div className=\"population\"><span>Population:</span> { population(country) }</div>\r\n            <div className=\"region\"><span>Region:</span> { country.subregion }</div>\r\n            <div className=\"capital\"><span>Capital: { country.capital }</span></div>\r\n          </div>\r\n          </Link>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CountryCard","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","export default __webpack_public_path__ + \"static/media/left-arrow.cb0898b1.svg\";","import { useParams, Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport './CountryDetails.css'\r\nimport spinner from '../assets/spinner.gif'\r\nimport leftArrow from '../assets/left-arrow.svg'\r\n\r\nconst CountryDetails = () =>{\r\n    let params = useParams()\r\n\r\n    const [detailedData, setDetailedData] = useState()\r\n\r\n    async function fetchData(){\r\n        let data = await (await fetch(`https://restcountries.com/v2/alpha/${params.country}`)).json()\r\n        if(data.status) {\r\n            console.log(\"tutaj zrobic redirect do '/'\")\r\n            // return (<Link exact to='/'></Link>) ??\r\n        }\r\n        else setDetailedData({...data})\r\n    }\r\n\r\n    function countryPopulation() { return detailedData.population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")}\r\n    function countrySize() { return detailedData.area.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")}\r\n    function Currencies() { return detailedData.currencies.map(curr => curr.name).join(', ')}\r\n    function Languages () { return detailedData.languages.map(lang => lang.name).join(', ')}\r\n    function Borders() { return detailedData.borders.map(border => {\r\n        return( <Link to={`/country/${border}`} key={border}>\r\n                   <button className=\"border-btn\">{ border }</button>\r\n                </Link>)\r\n    })}\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [params.country])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/\">\r\n                <button className=\"back-btn\"><img src={leftArrow} width=\"30px\" alt=\"\" />Back</button>\r\n            </Link>\r\n\r\n   {detailedData && (<div className=\"fullCard\">\r\n      <div className=\"detailedCard row\">\r\n         <div className=\"detailed-card-img\"><img src={detailedData.flag} alt=\"\" /></div>\r\n         <div className=\"detailed-card-text\">\r\n            <div className=\"detailed-country-name\">{ detailedData.name }</div>\r\n            <div className=\"details-row\">\r\n               <div className=\"details-row1\">\r\n                  <div className=\"country-native-name\"><span>Native Name: </span>{ detailedData.nativeName }</div>\r\n                  <div className=\"population\"><span>Population:</span> { detailedData.population ? countryPopulation() : \"Unknown\" }</div>\r\n                <div className=\"region\"><span>Region:</span> { detailedData.subregion }</div>\r\n                  <div className=\"capital\"><span>Capital: { detailedData.capital }</span></div>\r\n               </div>\r\n               <div className=\"details-row2\">\r\n                  <div className=\"size\"><span>Size: </span>{ detailedData.area ? countrySize() : \"Unknown\" } <span> km<sup>2</sup></span></div>\r\n                  <div className=\"currencies\"><span>Currencies: </span>{ Currencies() }</div>\r\n                  <div className=\"languages\"><span>Languages: </span>{ Languages() }</div>\r\n               </div>\r\n            </div>\r\n            {detailedData?.borders && detailedData?.borders.length && <div className=\"borders\"><span>Border Countries: </span>\r\n                {Borders()} \r\n            </div>}\r\n         </div>\r\n      </div>\r\n   </div>\r\n   )}\r\n   {!detailedData && ( <img className=\"loader\" src={spinner} alt = \"\" /> )}\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default CountryDetails","export default __webpack_public_path__ + \"static/media/search.7579a26a.svg\";","import search from \"../assets/search.svg\"\r\n\r\nconst regions = ['Worldwide', 'Africa', 'Americas', 'Asia', 'Europe', 'Oceania']\r\n\r\nconst SearchBar = ({onChangeRegion, onFilterCountries, filterValue}) =>{\r\n  \r\n\r\n    return (\r\n        <div className=\"search-bar row\">\r\n      <div className=\"search-icon\"><img src={search} alt=\"search\" width=\"30px\" /></div>\r\n      <input onInput={(e) => onFilterCountries(e.target.value)} type=\"text\" placeholder=\"Search for a country...\" value={filterValue} />\r\n    <select name=\"region\" className=\"regionFilter\" onChange={(e) => onChangeRegion(e.target.value)} value={localStorage.getItem('savedRegion') || ''}>\r\n      {regions.map(region => {\r\n          return (<option value={region==='Worldwide' ? '' : region} key={region}>{region}</option>)\r\n      }\r\n      )}\r\n    </select>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import './App.css';\nimport Header from './Header'\nimport CountryCard from './CountryCard'\nimport CountryDetails from './CountryDetails';\nimport SearchBar from './SearchBar'\nimport React, { useState, useEffect } from 'react';\nimport spinner from '../assets/spinner.gif'\n\nimport {Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [allCountries, setAllCountries] = useState()\n  const [showTheseCountries, setShowTheseCountries] = useState()\n  const [filterValue, setFilterValue] = useState('')\n  const [regionCountries, setRegionCountries] = useState()\n  \n  // console.log()\n\n  function filterCountries(val) {\n    let Val = val?.toLowerCase()?.trim()\n    // console.log('filterVal', Val)\n    const useThisData = regionCountries ? regionCountries : Object.values(allCountries)\n    // console.log('thisData', useThisData, Object.values(useThisData));\n\n    const searchedCountry = (!val || val === '') ? useThisData : Object.values(useThisData).filter((filterCountry) =>\n      filterCountry.name.toLowerCase().includes(Val) ||\n      filterCountry.alpha3Code.toLowerCase().includes(Val) ||\n      filterCountry.nativeName.toLowerCase().includes(Val))\n\n    // console.log(searchedCountry, searchedCountry.length);\n    setShowTheseCountries(searchedCountry)\n    // this.showFilteredCountries = this.searchedCountry\n  }\n\n  const changeRegion = (currentRegion) => {\n    // console.log('Region', currentRegion)\n    // console.log(allCountries);\n\n    if (!currentRegion || currentRegion === '') {\n      // console.log(allCountries)\n      setShowTheseCountries(allCountries)\n      setRegionCountries(allCountries)\n    }\n    else {\n      const filterRegionCountries = Object.values(allCountries || []).filter(item => item.region === currentRegion)\n      setRegionCountries(filterRegionCountries)\n      setShowTheseCountries(filterRegionCountries)\n      // console.log('region', filterRegionCountries)\n    }\n    localStorage.setItem('savedRegion', currentRegion)\n  }\n\n  useEffect(() => {\n    fetch('https://restcountries.com/v2/all/').then(response => response.json())\n      .then(recivedData => {\n        // console.log(recivedData)\n        setAllCountries({...recivedData})\n        setShowTheseCountries({...recivedData})\n        // if(localStorage.getItem('savedRegion')) changeRegion(localStorage.getItem('savedRegion'))\n      })\n  }, [])\n\n  useEffect(() => {\n    changeRegion(localStorage.getItem('savedRegion') || '')\n  }, [allCountries]) // przez te asynchronicznosc musialem dodac osobno wywolanie funkcji dopiero po\n  // odpowiednim zapisaniu danych w zmiennej allCountries\n\n  useEffect(() => {\n    if(filterValue) filterCountries(filterValue)\n  }, [regionCountries])\n\n\n  return ( \n  <div className=\"container\" >\n    <Header />\n    <Routes>\n      <Route path=\"country/:country\" element={<CountryDetails />} />\n        <Route path=\"*\" element={\n          <div>\n            <SearchBar onFilterCountries={data => setFilterValue(data, filterCountries(data))}\n                        onChangeRegion={val => changeRegion(val)}\n                        filterValue={filterValue} /> \n            <div className = \"showFilteredCountries row\"> \n              {showTheseCountries && Object.entries(showTheseCountries).map(country => {\n                  return (<CountryCard countryData={country[1]} key={country[1]?.alpha3Code || country[1].alpha2Code} />)\n                  })\n              }\n              {!allCountries && ( <img className=\"loader\" src={spinner} alt = \"\" /> )} \n              {filterValue && showTheseCountries.length === 0 && (<div>No countries found</div>)}\n            </div> \n          </div>\n        } />\n    </Routes>\n\n</div>\n    )\n  }\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './components/App';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n"],"sourceRoot":""}